{"remainingRequest":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js!/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/constants/regex.js","dependencies":[{"path":"/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/constants/regex.js","mtime":1610263603568},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/cache-loader/dist/cjs.js","mtime":1582363961748},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js","mtime":1585275399303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gLS0tIEdlbmVyYWwgLS0tCmV4cG9ydCB2YXIgUlhfQVJSQVlfTk9UQVRJT04gPSAvXFsoXGQrKV0vZzsKZXhwb3J0IHZhciBSWF9CVl9QUkVGSVggPSAvXihCVj8pLzsKZXhwb3J0IHZhciBSWF9ESUdJVFMgPSAvXlxkKyQvOwpleHBvcnQgdmFyIFJYX0VYVEVOU0lPTiA9IC9eXC4uKy87CmV4cG9ydCB2YXIgUlhfSEFTSCA9IC9eIy87CmV4cG9ydCB2YXIgUlhfSEFTSF9JRCA9IC9eI1tBLVphLXpdK1tcd1wtOi5dKiQvOwpleHBvcnQgdmFyIFJYX0hUTUxfVEFHUyA9IC8oPChbXj5dKyk+KS9naTsKZXhwb3J0IHZhciBSWF9IWVBIRU5BVEUgPSAvXEIoW0EtWl0pL2c7CmV4cG9ydCB2YXIgUlhfTE9XRVJfVVBQRVIgPSAvKFthLXpdKShbQS1aXSkvZzsKZXhwb3J0IHZhciBSWF9OVU1CRVIgPSAvXlswLTldKlwuP1swLTldKyQvOwpleHBvcnQgdmFyIFJYX1BMVVMgPSAvXCsvZzsKZXhwb3J0IHZhciBSWF9SRUdFWFBfUkVQTEFDRSA9IC9bLS9cXF4kKis/LigpfFtcXXt9XS9nOwpleHBvcnQgdmFyIFJYX1NQQUNFUyA9IC9bXHNcdUZFRkZceEEwXSsvZzsKZXhwb3J0IHZhciBSWF9TUEFDRV9TUExJVCA9IC9ccysvOwpleHBvcnQgdmFyIFJYX1NUQVIgPSAvXC9cKiQvOwpleHBvcnQgdmFyIFJYX1NUQVJUX1NQQUNFX1dPUkQgPSAvKFxzfF4pKFx3KS9nOwpleHBvcnQgdmFyIFJYX1RSSU1fTEVGVCA9IC9eXHMrLzsKZXhwb3J0IHZhciBSWF9UUklNX1JJR0hUID0gL1xzKyQvOwpleHBvcnQgdmFyIFJYX1VOREVSU0NPUkUgPSAvXy9nOwpleHBvcnQgdmFyIFJYX1VOX0tFQkFCID0gLy0oXHcpL2c7IC8vIC0tLSBEYXRlIC0tLQovLyBMb29zZSBZWVlZLU1NLUREIG1hdGNoaW5nLCBpZ25vcmVzIGFueSBhcHBlbmRlZCB0aW1lIGluZm9yYXRpb24KLy8gTWF0Y2hlcyAnMTk5OS0xMi0yMCcsICcxOTk5LTEtMScsICcxOTk5LTAxLTIwVDIyOjUxOjQ5LjExOFonLCAnMTk5OS0wMS0wMiAxMzowMDowMCcKCmV4cG9ydCB2YXIgUlhfREFURSA9IC9eXGQrLVxkXGQ/LVxkXGQ/KD86XHN8VHwkKS87IC8vIFVzZWQgdG8gc3BsaXQgb2ZmIHRoZSBkYXRlIHBhcnRzIG9mIHRoZSBZWVlZLU1NLUREIHN0cmluZwoKZXhwb3J0IHZhciBSWF9EQVRFX1NQTElUID0gLy18XHN8VC87IC8vIFRpbWUgc3RyaW5nIFJlZ0V4IChvcHRpb25hbCBzZWNvbmRzKQoKZXhwb3J0IHZhciBSWF9USU1FID0gL14oWzAtMV0/WzAtOV18MlswLTNdKTpbMC01XT9bMC05XSg6WzAtNV0/WzAtOV0pPyQvOyAvLyAtLS0gVVJMIC0tLQovLyBIUkVGcyBtdXN0IGVuZCB3aXRoIGEgaGFzaCBmb2xsb3dlZCBieSBhdCBsZWFzdCBvbmUgbm9uLWhhc2ggY2hhcmFjdGVyCgpleHBvcnQgdmFyIFJYX0hSRUYgPSAvXi4qKCNbXiNdKykkLzsKZXhwb3J0IHZhciBSWF9FTkNPREVEX0NPTU1BID0gLyUyQy9nOwpleHBvcnQgdmFyIFJYX0VOQ09ERV9SRVZFUlNFID0gL1shJygpKl0vZzsKZXhwb3J0IHZhciBSWF9RVUVSWV9TVEFSVCA9IC9eKFw/fCN8JikvOyAvLyAtLS0gQXNwZWN0IC0tLQoKZXhwb3J0IHZhciBSWF9BU1BFQ1QgPSAvXlxkKyhcLlxkKik/Wy86XVxkKyhcLlxkKik/JC87CmV4cG9ydCB2YXIgUlhfQVNQRUNUX1NFUEFSQVRPUiA9IC9bLzpdLzsgLy8gLS0tIEdyaWQgLS0tCgpleHBvcnQgdmFyIFJYX0NPTF9DTEFTUyA9IC9eY29sLS87IC8vIC0tLSBJY29uIC0tLQoKZXhwb3J0IHZhciBSWF9JQ09OX1BSRUZJWCA9IC9eQkljb24vOyAvLyAtLS0gTG9jYWxlIC0tLQoKZXhwb3J0IHZhciBSWF9TVFJJUF9MT0NBTEVfTU9EUyA9IC8tdS0uKy87"},{"version":3,"sources":["/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/constants/regex.js"],"names":["RX_ARRAY_NOTATION","RX_BV_PREFIX","RX_DIGITS","RX_EXTENSION","RX_HASH","RX_HASH_ID","RX_HTML_TAGS","RX_HYPHENATE","RX_LOWER_UPPER","RX_NUMBER","RX_PLUS","RX_REGEXP_REPLACE","RX_SPACES","RX_SPACE_SPLIT","RX_STAR","RX_START_SPACE_WORD","RX_TRIM_LEFT","RX_TRIM_RIGHT","RX_UNDERSCORE","RX_UN_KEBAB","RX_DATE","RX_DATE_SPLIT","RX_TIME","RX_HREF","RX_ENCODED_COMMA","RX_ENCODE_REVERSE","RX_QUERY_START","RX_ASPECT","RX_ASPECT_SEPARATOR","RX_COL_CLASS","RX_ICON_PREFIX","RX_STRIP_LOCALE_MODS"],"mappings":"AAAA;AACA,OAAO,IAAIA,iBAAiB,GAAG,WAAxB;AACP,OAAO,IAAIC,YAAY,GAAG,QAAnB;AACP,OAAO,IAAIC,SAAS,GAAG,OAAhB;AACP,OAAO,IAAIC,YAAY,GAAG,OAAnB;AACP,OAAO,IAAIC,OAAO,GAAG,IAAd;AACP,OAAO,IAAIC,UAAU,GAAG,uBAAjB;AACP,OAAO,IAAIC,YAAY,GAAG,eAAnB;AACP,OAAO,IAAIC,YAAY,GAAG,YAAnB;AACP,OAAO,IAAIC,cAAc,GAAG,iBAArB;AACP,OAAO,IAAIC,SAAS,GAAG,mBAAhB;AACP,OAAO,IAAIC,OAAO,GAAG,KAAd;AACP,OAAO,IAAIC,iBAAiB,GAAG,uBAAxB;AACP,OAAO,IAAIC,SAAS,GAAG,kBAAhB;AACP,OAAO,IAAIC,cAAc,GAAG,KAArB;AACP,OAAO,IAAIC,OAAO,GAAG,OAAd;AACP,OAAO,IAAIC,mBAAmB,GAAG,aAA1B;AACP,OAAO,IAAIC,YAAY,GAAG,MAAnB;AACP,OAAO,IAAIC,aAAa,GAAG,MAApB;AACP,OAAO,IAAIC,aAAa,GAAG,IAApB;AACP,OAAO,IAAIC,WAAW,GAAG,QAAlB,C,CAA4B;AACnC;AACA;;AAEA,OAAO,IAAIC,OAAO,GAAG,4BAAd,C,CAA4C;;AAEnD,OAAO,IAAIC,aAAa,GAAG,QAApB,C,CAA8B;;AAErC,OAAO,IAAIC,OAAO,GAAG,mDAAd,C,CAAmE;AAC1E;;AAEA,OAAO,IAAIC,OAAO,GAAG,cAAd;AACP,OAAO,IAAIC,gBAAgB,GAAG,MAAvB;AACP,OAAO,IAAIC,iBAAiB,GAAG,UAAxB;AACP,OAAO,IAAIC,cAAc,GAAG,WAArB,C,CAAkC;;AAEzC,OAAO,IAAIC,SAAS,GAAG,8BAAhB;AACP,OAAO,IAAIC,mBAAmB,GAAG,MAA1B,C,CAAkC;;AAEzC,OAAO,IAAIC,YAAY,GAAG,OAAnB,C,CAA4B;;AAEnC,OAAO,IAAIC,cAAc,GAAG,QAArB,C,CAA+B;;AAEtC,OAAO,IAAIC,oBAAoB,GAAG,OAA3B","sourcesContent":["// --- General ---\nexport var RX_ARRAY_NOTATION = /\\[(\\d+)]/g;\nexport var RX_BV_PREFIX = /^(BV?)/;\nexport var RX_DIGITS = /^\\d+$/;\nexport var RX_EXTENSION = /^\\..+/;\nexport var RX_HASH = /^#/;\nexport var RX_HASH_ID = /^#[A-Za-z]+[\\w\\-:.]*$/;\nexport var RX_HTML_TAGS = /(<([^>]+)>)/gi;\nexport var RX_HYPHENATE = /\\B([A-Z])/g;\nexport var RX_LOWER_UPPER = /([a-z])([A-Z])/g;\nexport var RX_NUMBER = /^[0-9]*\\.?[0-9]+$/;\nexport var RX_PLUS = /\\+/g;\nexport var RX_REGEXP_REPLACE = /[-/\\\\^$*+?.()|[\\]{}]/g;\nexport var RX_SPACES = /[\\s\\uFEFF\\xA0]+/g;\nexport var RX_SPACE_SPLIT = /\\s+/;\nexport var RX_STAR = /\\/\\*$/;\nexport var RX_START_SPACE_WORD = /(\\s|^)(\\w)/g;\nexport var RX_TRIM_LEFT = /^\\s+/;\nexport var RX_TRIM_RIGHT = /\\s+$/;\nexport var RX_UNDERSCORE = /_/g;\nexport var RX_UN_KEBAB = /-(\\w)/g; // --- Date ---\n// Loose YYYY-MM-DD matching, ignores any appended time inforation\n// Matches '1999-12-20', '1999-1-1', '1999-01-20T22:51:49.118Z', '1999-01-02 13:00:00'\n\nexport var RX_DATE = /^\\d+-\\d\\d?-\\d\\d?(?:\\s|T|$)/; // Used to split off the date parts of the YYYY-MM-DD string\n\nexport var RX_DATE_SPLIT = /-|\\s|T/; // Time string RegEx (optional seconds)\n\nexport var RX_TIME = /^([0-1]?[0-9]|2[0-3]):[0-5]?[0-9](:[0-5]?[0-9])?$/; // --- URL ---\n// HREFs must end with a hash followed by at least one non-hash character\n\nexport var RX_HREF = /^.*(#[^#]+)$/;\nexport var RX_ENCODED_COMMA = /%2C/g;\nexport var RX_ENCODE_REVERSE = /[!'()*]/g;\nexport var RX_QUERY_START = /^(\\?|#|&)/; // --- Aspect ---\n\nexport var RX_ASPECT = /^\\d+(\\.\\d*)?[/:]\\d+(\\.\\d*)?$/;\nexport var RX_ASPECT_SEPARATOR = /[/:]/; // --- Grid ---\n\nexport var RX_COL_CLASS = /^col-/; // --- Icon ---\n\nexport var RX_ICON_PREFIX = /^BIcon/; // --- Locale ---\n\nexport var RX_STRIP_LOCALE_MODS = /-u-.+/;"]}]}