{"remainingRequest":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js!/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/observe-dom.js","dependencies":[{"path":"/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/observe-dom.js","mtime":1610263603568},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/cache-loader/dist/cjs.js","mtime":1582363961748},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js","mtime":1585275399303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZGVmaW5lLXByb3BlcnR5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKaW1wb3J0IHsgTXV0YXRpb25PYnMsIGlzRWxlbWVudCB9IGZyb20gJy4vZG9tJzsKaW1wb3J0IHsgd2Fybk5vTXV0YXRpb25PYnNlcnZlclN1cHBvcnQgfSBmcm9tICcuL3dhcm4nOwovKioKICogT2JzZXJ2ZSBhIERPTSBlbGVtZW50IGNoYW5nZXMsIGZhbGxzIGJhY2sgdG8gZXZlbnRMaXN0ZW5lciBtb2RlCiAqIEBwYXJhbSB7RWxlbWVudH0gZWwgVGhlIERPTSBlbGVtZW50IHRvIG9ic2VydmUKICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgY2FsbGJhY2sgdG8gYmUgY2FsbGVkIG9uIGNoYW5nZQogKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnM9e2NoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZX1dIG9ic2VydmUgb3B0aW9ucwogKiBAc2VlIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzMyMTk3NTgKICovCgpleHBvcnQgdmFyIG9ic2VydmVEb20gPSBmdW5jdGlvbiBvYnNlcnZlRG9tKGVsLCBjYWxsYmFjaywgb3B0aW9ucykKLyogaXN0YW5idWwgaWdub3JlIG5leHQ6IGRpZmZpY3VsdCB0byB0ZXN0IGluIEpTRE9NICovCnsKICAvLyBIYW5kbGUgY2FzZXMgd2hlcmUgd2UgbWlnaHQgYmUgcGFzc2VkIGEgVnVlIGluc3RhbmNlCiAgZWwgPSBlbCA/IGVsLiRlbCB8fCBlbCA6IG51bGw7IC8vIEVhcmx5IGV4aXQgd2hlbiB3ZSBoYXZlIG5vIGVsZW1lbnQKCiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQ6IGRpZmZpY3VsdCB0byB0ZXN0IGluIEpTRE9NICovCgogIGlmICghaXNFbGVtZW50KGVsKSkgewogICAgcmV0dXJuIG51bGw7CiAgfSAvLyBFeGl0IGFuZCB0aHJvdyBhIHdhcm5pbmcgd2hlbiBgTXV0YXRpb25PYnNlcnZlcmAgaXNuJ3QgYXZhaWxhYmxlCgoKICBpZiAod2Fybk5vTXV0YXRpb25PYnNlcnZlclN1cHBvcnQoJ29ic2VydmVEb20nKSkgewogICAgcmV0dXJuIG51bGw7CiAgfSAvLyBEZWZpbmUgYSBuZXcgb2JzZXJ2ZXIKCgogIHZhciBvYnMgPSBuZXcgTXV0YXRpb25PYnMoZnVuY3Rpb24gKG11dGF0aW9ucykgewogICAgdmFyIGNoYW5nZWQgPSBmYWxzZTsgLy8gQSBtdXRhdGlvbiBjYW4gY29udGFpbiBzZXZlcmFsIGNoYW5nZSByZWNvcmRzLCBzbyB3ZSBsb29wCiAgICAvLyB0aHJvdWdoIHRoZW0gdG8gc2VlIHdoYXQgaGFzIGNoYW5nZWQKICAgIC8vIFdlIGJyZWFrIG91dCBvZiB0aGUgbG9vcCBlYXJseSBpZiBhbnkgInNpZ25pZmljYW50IiBjaGFuZ2UKICAgIC8vIGhhcyBiZWVuIGRldGVjdGVkCgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtdXRhdGlvbnMubGVuZ3RoICYmICFjaGFuZ2VkOyBpKyspIHsKICAgICAgLy8gVGhlIG11dGF0aW9uIHJlY29yZAogICAgICB2YXIgbXV0YXRpb24gPSBtdXRhdGlvbnNbaV07IC8vIE11dGF0aW9uIHR5cGUKCiAgICAgIHZhciB0eXBlID0gbXV0YXRpb24udHlwZTsgLy8gRE9NIG5vZGUgKGNvdWxkIGJlIGFueSBET00gbm9kZSB0eXBlIC0gSFRNTEVsZW1lbnQsIFRleHQsIGNvbW1lbnQsIGV0Yy4pCgogICAgICB2YXIgdGFyZ2V0ID0gbXV0YXRpb24udGFyZ2V0OyAvLyBEZXRlY3Qgd2hldGhlciBhIGNoYW5nZSBoYXBwZW5lZCBiYXNlZCBvbiB0eXBlIGFuZCB0YXJnZXQKCiAgICAgIGlmICh0eXBlID09PSAnY2hhcmFjdGVyRGF0YScgJiYgdGFyZ2V0Lm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSkgewogICAgICAgIC8vIFdlIGlnbm9yZSBub2RlcyB0aGF0IGFyZSBub3QgVEVYVCAoaS5lLiBjb21tZW50cywgZXRjLikKICAgICAgICAvLyBhcyB0aGV5IGRvbid0IGNoYW5nZSBsYXlvdXQKICAgICAgICBjaGFuZ2VkID0gdHJ1ZTsKICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnYXR0cmlidXRlcycpIHsKICAgICAgICBjaGFuZ2VkID0gdHJ1ZTsKICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnY2hpbGRMaXN0JyAmJiAobXV0YXRpb24uYWRkZWROb2Rlcy5sZW5ndGggPiAwIHx8IG11dGF0aW9uLnJlbW92ZWROb2Rlcy5sZW5ndGggPiAwKSkgewogICAgICAgIC8vIFRoaXMgaW5jbHVkZXMgSFRNTEVsZW1lbnQgYW5kIHRleHQgbm9kZXMgYmVpbmcKICAgICAgICAvLyBhZGRlZC9yZW1vdmVkL3JlLWFycmFuZ2VkCiAgICAgICAgY2hhbmdlZCA9IHRydWU7CiAgICAgIH0KICAgIH0gLy8gV2Ugb25seSBjYWxsIHRoZSBjYWxsYmFjayBpZiBhIGNoYW5nZSB0aGF0IGNvdWxkIGFmZmVjdAogICAgLy8gbGF5b3V0L3NpemUgdHJ1bHkgaGFwcGVuZWQKCgogICAgaWYgKGNoYW5nZWQpIHsKICAgICAgY2FsbGJhY2soKTsKICAgIH0KICB9KTsgLy8gSGF2ZSB0aGUgb2JzZXJ2ZXIgb2JzZXJ2ZSBmb28gZm9yIGNoYW5nZXMgaW4gY2hpbGRyZW4sIGV0YwoKICBvYnMub2JzZXJ2ZShlbCwgX29iamVjdFNwcmVhZCh7CiAgICBjaGlsZExpc3Q6IHRydWUsCiAgICBzdWJ0cmVlOiB0cnVlCiAgfSwgb3B0aW9ucykpOyAvLyBXZSByZXR1cm4gYSByZWZlcmVuY2UgdG8gdGhlIG9ic2VydmVyIHNvIHRoYXQgYG9icy5kaXNjb25uZWN0KClgCiAgLy8gY2FuIGJlIGNhbGxlZCBpZiBuZWNlc3NhcnkKICAvLyBUbyByZWR1Y2Ugb3ZlcmhlYWQgd2hlbiB0aGUgcm9vdCBlbGVtZW50IGlzIGhpZGRlbgoKICByZXR1cm4gb2JzOwp9Ow=="},{"version":3,"sources":["/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/observe-dom.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","MutationObs","isElement","warnNoMutationObserverSupport","observeDom","el","callback","options","$el","obs","mutations","changed","mutation","type","nodeType","Node","TEXT_NODE","addedNodes","removedNodes","observe","childList","subtree"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MutationObs, isElement } from './dom';\nimport { warnNoMutationObserverSupport } from './warn';\n/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [options={childList: true, subtree: true}] observe options\n * @see https://stackoverflow.com/questions/3219758\n */\n\nexport var observeDom = function observeDom(el, callback, options)\n/* istanbul ignore next: difficult to test in JSDOM */\n{\n  // Handle cases where we might be passed a Vue instance\n  el = el ? el.$el || el : null; // Early exit when we have no element\n\n  /* istanbul ignore next: difficult to test in JSDOM */\n\n  if (!isElement(el)) {\n    return null;\n  } // Exit and throw a warning when `MutationObserver` isn't available\n\n\n  if (warnNoMutationObserverSupport('observeDom')) {\n    return null;\n  } // Define a new observer\n\n\n  var obs = new MutationObs(function (mutations) {\n    var changed = false; // A mutation can contain several change records, so we loop\n    // through them to see what has changed\n    // We break out of the loop early if any \"significant\" change\n    // has been detected\n\n    for (var i = 0; i < mutations.length && !changed; i++) {\n      // The mutation record\n      var mutation = mutations[i]; // Mutation type\n\n      var type = mutation.type; // DOM node (could be any DOM node type - HTMLElement, Text, comment, etc.)\n\n      var target = mutation.target; // Detect whether a change happened based on type and target\n\n      if (type === 'characterData' && target.nodeType === Node.TEXT_NODE) {\n        // We ignore nodes that are not TEXT (i.e. comments, etc.)\n        // as they don't change layout\n        changed = true;\n      } else if (type === 'attributes') {\n        changed = true;\n      } else if (type === 'childList' && (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0)) {\n        // This includes HTMLElement and text nodes being\n        // added/removed/re-arranged\n        changed = true;\n      }\n    } // We only call the callback if a change that could affect\n    // layout/size truly happened\n\n\n    if (changed) {\n      callback();\n    }\n  }); // Have the observer observe foo for changes in children, etc\n\n  obs.observe(el, _objectSpread({\n    childList: true,\n    subtree: true\n  }, options)); // We return a reference to the observer so that `obs.disconnect()`\n  // can be called if necessary\n  // To reduce overhead when the root element is hidden\n\n  return obs;\n};"]}]}