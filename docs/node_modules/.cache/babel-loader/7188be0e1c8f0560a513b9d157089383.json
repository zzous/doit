{"remainingRequest":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js!/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/env.js","dependencies":[{"path":"/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/env.js","mtime":1610263603568},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/cache-loader/dist/cjs.js","mtime":1582363961748},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js","mtime":1585275399303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIFV0aWxpdGllcyB0byBnZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgZW52aXJvbm1lbnQKICovCmV4cG9ydCB2YXIgZ2V0RW52ID0gZnVuY3Rpb24gZ2V0RW52KGtleSkgewogIHZhciBmYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogbnVsbDsKICB2YXIgZW52ID0gdHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MgPyBwcm9jZXNzLmVudiB8fCB7fSA6IHt9OwoKICBpZiAoIWtleSkgewogICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KICAgIHJldHVybiBlbnY7CiAgfQoKICByZXR1cm4gZW52W2tleV0gfHwgZmFsbGJhY2s7Cn07CmV4cG9ydCB2YXIgZ2V0Tm9XYXJuID0gZnVuY3Rpb24gZ2V0Tm9XYXJuKCkgewogIHJldHVybiBnZXRFbnYoJ0JPT1RTVFJBUF9WVUVfTk9fV0FSTicpIHx8IGdldEVudignTk9ERV9FTlYnKSA9PT0gJ3Byb2R1Y3Rpb24nOwp9Ow=="},{"version":3,"sources":["/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/env.js"],"names":["getEnv","key","fallback","arguments","length","undefined","env","process","getNoWarn"],"mappings":"AAAA;;;AAGA,OAAO,IAAIA,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACvC,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAnF;AACA,MAAIG,GAAG,GAAG,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAlC,GAA4CA,OAAO,CAACD,GAAR,IAAe,EAA3D,GAAgE,EAA1E;;AAEA,MAAI,CAACL,GAAL,EAAU;AACR;AACA,WAAOK,GAAP;AACD;;AAED,SAAOA,GAAG,CAACL,GAAD,CAAH,IAAYC,QAAnB;AACD,CAVM;AAWP,OAAO,IAAIM,SAAS,GAAG,SAASA,SAAT,GAAqB;AAC1C,SAAOR,MAAM,CAAC,uBAAD,CAAN,IAAmCA,MAAM,CAAC,UAAD,CAAN,KAAuB,YAAjE;AACD,CAFM","sourcesContent":["/**\n * Utilities to get information about the current environment\n */\nexport var getEnv = function getEnv(key) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var env = typeof process !== 'undefined' && process ? process.env || {} : {};\n\n  if (!key) {\n    /* istanbul ignore next */\n    return env;\n  }\n\n  return env[key] || fallback;\n};\nexport var getNoWarn = function getNoWarn() {\n  return getEnv('BOOTSTRAP_VUE_NO_WARN') || getEnv('NODE_ENV') === 'production';\n};"]}]}