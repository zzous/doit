{"remainingRequest":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js!/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/stable-sort.js","dependencies":[{"path":"/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/stable-sort.js","mtime":1610263603568},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/cache-loader/dist/cjs.js","mtime":1582363961748},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js","mtime":1585275399303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLmJpbmQiOwoKLyoKICogQ29uc2lzdGVudCBhbmQgc3RhYmxlIHNvcnQgZnVuY3Rpb24gYWNyb3NzIEphdmFTY3JpcHQgcGxhdGZvcm1zCiAqCiAqIEluY29uc2lzdGVudCBzb3J0cyBjYW4gY2F1c2UgU1NSIHByb2JsZW1zIGJldHdlZW4gY2xpZW50IGFuZCBzZXJ2ZXIKICogc3VjaCBhcyBpbiA8Yi10YWJsZT4gaWYgc29ydEJ5IGlzIGFwcGxpZWQgdG8gdGhlIGRhdGEgb24gc2VydmVyIHNpZGUgcmVuZGVyLgogKiBDaHJvbWUgYW5kIFY4IG5hdGl2ZSBzb3J0cyBhcmUgaW5jb25zaXN0ZW50L3Vuc3RhYmxlCiAqCiAqIFRoaXMgZnVuY3Rpb24gdXNlcyBuYXRpdmUgc29ydCB3aXRoIGZhbGxiYWNrIHRvIGluZGV4IGNvbXBhcmUgd2hlbiB0aGUgYSBhbmQgYgogKiBjb21wYXJlIHJldHVybnMgMAogKgogKiBBbGdvcml0aG0gYmFzZWQgb246CiAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzE0Mjc2MDgvZmFzdC1zdGFibGUtc29ydGluZy1hbGdvcml0aG0taW1wbGVtZW50YXRpb24taW4tamF2YXNjcmlwdC80NTQyMjY0NSM0NTQyMjY0NQogKgogKiBAcGFyYW0ge2FycmF5fSBhcnJheSB0byBzb3J0CiAqIEBwYXJhbSB7ZnVuY3Rpb259IHNvcnQgY29tcGFyZSBmdW5jdGlvbgogKiBAcmV0dXJuIHthcnJheX0KICovCmV4cG9ydCB2YXIgc3RhYmxlU29ydCA9IGZ1bmN0aW9uIHN0YWJsZVNvcnQoYXJyYXksIGNvbXBhcmVGbikgewogIC8vIFVzaW5nIGAuYmluZChjb21wYXJlRm4pYCBvbiB0aGUgd3JhcHBlZCBhbm9ueW1vdXMgZnVuY3Rpb24gaW1wcm92ZXMKICAvLyBwZXJmb3JtYW5jZSBieSBhdm9pZGluZyB0aGUgZnVuY3Rpb24gY2FsbCBzZXR1cC4gV2UgZG9uJ3QgdXNlIGFuIGFycm93CiAgLy8gZnVuY3Rpb24gaGVyZSBhcyBpdCBiaW5kcyBgdGhpc2AgdG8gdGhlIGBzdGFibGVTb3J0YCBjb250ZXh0IHJhdGhlciB0aGFuCiAgLy8gdGhlIGBjb21wYXJlRm5gIGNvbnRleHQsIHdoaWNoIHdvdWxkbid0IGdpdmUgdXMgdGhlIHBlcmZvcm1hbmNlIGluY3JlYXNlLgogIHJldHVybiBhcnJheS5tYXAoZnVuY3Rpb24gKGEsIGluZGV4KSB7CiAgICByZXR1cm4gW2luZGV4LCBhXTsKICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICByZXR1cm4gdGhpcyhhWzFdLCBiWzFdKSB8fCBhWzBdIC0gYlswXTsKICB9LmJpbmQoY29tcGFyZUZuKSkubWFwKGZ1bmN0aW9uIChlKSB7CiAgICByZXR1cm4gZVsxXTsKICB9KTsKfTs="},{"version":3,"sources":["/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/utils/stable-sort.js"],"names":["stableSort","array","compareFn","map","a","index","sort","b","bind","e"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAO,IAAIA,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,SAA3B,EAAsC;AAC5D;AACA;AACA;AACA;AACA,SAAOD,KAAK,CAACE,GAAN,CAAU,UAAUC,CAAV,EAAaC,KAAb,EAAoB;AACnC,WAAO,CAACA,KAAD,EAAQD,CAAR,CAAP;AACD,GAFM,EAEJE,IAFI,CAEC,UAAUF,CAAV,EAAaG,CAAb,EAAgB;AACtB,WAAO,KAAKH,CAAC,CAAC,CAAD,CAAN,EAAWG,CAAC,CAAC,CAAD,CAAZ,KAAoBH,CAAC,CAAC,CAAD,CAAD,GAAOG,CAAC,CAAC,CAAD,CAAnC;AACD,GAFO,CAENC,IAFM,CAEDN,SAFC,CAFD,EAIYC,GAJZ,CAIgB,UAAUM,CAAV,EAAa;AAClC,WAAOA,CAAC,CAAC,CAAD,CAAR;AACD,GANM,CAAP;AAOD,CAZM","sourcesContent":["/*\n * Consistent and stable sort function across JavaScript platforms\n *\n * Inconsistent sorts can cause SSR problems between client and server\n * such as in <b-table> if sortBy is applied to the data on server side render.\n * Chrome and V8 native sorts are inconsistent/unstable\n *\n * This function uses native sort with fallback to index compare when the a and b\n * compare returns 0\n *\n * Algorithm based on:\n * https://stackoverflow.com/questions/1427608/fast-stable-sorting-algorithm-implementation-in-javascript/45422645#45422645\n *\n * @param {array} array to sort\n * @param {function} sort compare function\n * @return {array}\n */\nexport var stableSort = function stableSort(array, compareFn) {\n  // Using `.bind(compareFn)` on the wrapped anonymous function improves\n  // performance by avoiding the function call setup. We don't use an arrow\n  // function here as it binds `this` to the `stableSort` context rather than\n  // the `compareFn` context, which wouldn't give us the performance increase.\n  return array.map(function (a, index) {\n    return [index, a];\n  }).sort(function (a, b) {\n    return this(a[1], b[1]) || a[0] - b[0];\n  }.bind(compareFn)).map(function (e) {\n    return e[1];\n  });\n};"]}]}