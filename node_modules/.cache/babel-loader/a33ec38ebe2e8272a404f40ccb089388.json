{"remainingRequest":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js!/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/components/table/helpers/normalize-fields.js","dependencies":[{"path":"/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/components/table/helpers/normalize-fields.js","mtime":1610263603568},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/cache-loader/dist/cjs.js","mtime":1582363961748},{"path":"/Users/zzou/Downloads/backup_sample/node_modules/babel-loader/lib/index.js","mtime":1585275399303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IHsgaWRlbnRpdHkgfSBmcm9tICcuLi8uLi8uLi91dGlscy9pZGVudGl0eSc7CmltcG9ydCB7IGlzQXJyYXksIGlzRnVuY3Rpb24sIGlzT2JqZWN0LCBpc1N0cmluZyB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2luc3BlY3QnOwppbXBvcnQgeyBjbG9uZSwga2V5cyB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IHN0YXJ0Q2FzZSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3N0cmluZyc7CmltcG9ydCB7IElHTk9SRURfRklFTERfS0VZUyB9IGZyb20gJy4vY29uc3RhbnRzJzsgLy8gUHJpdmF0ZSBmdW5jdGlvbiB0byBtYXNzYWdlIGZpZWxkIGVudHJ5IGludG8gY29tbW9uIG9iamVjdCBmb3JtYXQKCnZhciBwcm9jZXNzRmllbGQgPSBmdW5jdGlvbiBwcm9jZXNzRmllbGQoa2V5LCB2YWx1ZSkgewogIHZhciBmaWVsZCA9IG51bGw7CgogIGlmIChpc1N0cmluZyh2YWx1ZSkpIHsKICAgIC8vIExhYmVsIHNob3J0Y3V0CiAgICBmaWVsZCA9IHsKICAgICAga2V5OiBrZXksCiAgICAgIGxhYmVsOiB2YWx1ZQogICAgfTsKICB9IGVsc2UgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7CiAgICAvLyBGb3JtYXR0ZXIgc2hvcnRjdXQKICAgIGZpZWxkID0gewogICAgICBrZXk6IGtleSwKICAgICAgZm9ybWF0dGVyOiB2YWx1ZQogICAgfTsKICB9IGVsc2UgaWYgKGlzT2JqZWN0KHZhbHVlKSkgewogICAgZmllbGQgPSBjbG9uZSh2YWx1ZSk7CiAgICBmaWVsZC5rZXkgPSBmaWVsZC5rZXkgfHwga2V5OwogIH0gZWxzZSBpZiAodmFsdWUgIT09IGZhbHNlKSB7CiAgICAvLyBGYWxsYmFjayB0byBqdXN0IGtleQoKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICBmaWVsZCA9IHsKICAgICAga2V5OiBrZXkKICAgIH07CiAgfQoKICByZXR1cm4gZmllbGQ7Cn07IC8vIFdlIG5vcm1hbGl6ZSBmaWVsZHMgaW50byBhbiBhcnJheSBvZiBvYmplY3RzCi8vIFsgeyBrZXk6Li4uLCBsYWJlbDouLi4sIC4uLn0sIHsuLi59LCAuLi4sIHsuLn1dCgoKZXhwb3J0IHZhciBub3JtYWxpemVGaWVsZHMgPSBmdW5jdGlvbiBub3JtYWxpemVGaWVsZHMob3JpZ0ZpZWxkcywgaXRlbXMpIHsKICB2YXIgZmllbGRzID0gW107CgogIGlmIChpc0FycmF5KG9yaWdGaWVsZHMpKSB7CiAgICAvLyBOb3JtYWxpemUgYXJyYXkgRm9ybQogICAgb3JpZ0ZpZWxkcy5maWx0ZXIoaWRlbnRpdHkpLmZvckVhY2goZnVuY3Rpb24gKGYpIHsKICAgICAgaWYgKGlzU3RyaW5nKGYpKSB7CiAgICAgICAgZmllbGRzLnB1c2goewogICAgICAgICAga2V5OiBmLAogICAgICAgICAgbGFiZWw6IHN0YXJ0Q2FzZShmKQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKGlzT2JqZWN0KGYpICYmIGYua2V5ICYmIGlzU3RyaW5nKGYua2V5KSkgewogICAgICAgIC8vIEZ1bGwgb2JqZWN0IGRlZmluaXRpb24uIFdlIHVzZSBhc3NpZ24gc28gdGhhdCB3ZSBkb24ndCBtdXRhdGUgdGhlIG9yaWdpbmFsCiAgICAgICAgZmllbGRzLnB1c2goY2xvbmUoZikpOwogICAgICB9IGVsc2UgaWYgKGlzT2JqZWN0KGYpICYmIGtleXMoZikubGVuZ3RoID09PSAxKSB7CiAgICAgICAgLy8gU2hvcnRjdXQgb2JqZWN0IChpLmUuIHsgJ2Zvb19iYXInOiAnVGhpcyBpcyBGb28gQmFyJyB9CiAgICAgICAgdmFyIGtleSA9IGtleXMoZilbMF07CiAgICAgICAgdmFyIGZpZWxkID0gcHJvY2Vzc0ZpZWxkKGtleSwgZltrZXldKTsKCiAgICAgICAgaWYgKGZpZWxkKSB7CiAgICAgICAgICBmaWVsZHMucHVzaChmaWVsZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9IC8vIElmIG5vIGZpZWxkIHByb3ZpZGVkLCB0YWtlIGEgc2FtcGxlIGZyb20gZmlyc3QgcmVjb3JkIChpZiBleGl0cykKCgogIGlmIChmaWVsZHMubGVuZ3RoID09PSAwICYmIGlzQXJyYXkoaXRlbXMpICYmIGl0ZW1zLmxlbmd0aCA+IDApIHsKICAgIHZhciBzYW1wbGUgPSBpdGVtc1swXTsKICAgIGtleXMoc2FtcGxlKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7CiAgICAgIGlmICghSUdOT1JFRF9GSUVMRF9LRVlTW2tdKSB7CiAgICAgICAgZmllbGRzLnB1c2goewogICAgICAgICAga2V5OiBrLAogICAgICAgICAgbGFiZWw6IHN0YXJ0Q2FzZShrKQogICAgICAgIH0pOwogICAgICB9CiAgICB9KTsKICB9IC8vIEVuc3VyZSB3ZSBoYXZlIGEgdW5pcXVlIGFycmF5IG9mIGZpZWxkcyBhbmQgdGhhdCB0aGV5IGhhdmUgU3RyaW5nIGxhYmVscwoKCiAgdmFyIG1lbW8gPSB7fTsKICByZXR1cm4gZmllbGRzLmZpbHRlcihmdW5jdGlvbiAoZikgewogICAgaWYgKCFtZW1vW2Yua2V5XSkgewogICAgICBtZW1vW2Yua2V5XSA9IHRydWU7CiAgICAgIGYubGFiZWwgPSBpc1N0cmluZyhmLmxhYmVsKSA/IGYubGFiZWwgOiBzdGFydENhc2UoZi5rZXkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICByZXR1cm4gZmFsc2U7CiAgfSk7Cn07"},{"version":3,"sources":["/Users/zzou/Downloads/backup_sample/node_modules/bootstrap-vue/esm/components/table/helpers/normalize-fields.js"],"names":["identity","isArray","isFunction","isObject","isString","clone","keys","startCase","IGNORED_FIELD_KEYS","processField","key","value","field","label","formatter","normalizeFields","origFields","items","fields","filter","forEach","f","push","length","sample","k","memo"],"mappings":"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","sourcesContent":["import { identity } from '../../../utils/identity';\nimport { isArray, isFunction, isObject, isString } from '../../../utils/inspect';\nimport { clone, keys } from '../../../utils/object';\nimport { startCase } from '../../../utils/string';\nimport { IGNORED_FIELD_KEYS } from './constants'; // Private function to massage field entry into common object format\n\nvar processField = function processField(key, value) {\n  var field = null;\n\n  if (isString(value)) {\n    // Label shortcut\n    field = {\n      key: key,\n      label: value\n    };\n  } else if (isFunction(value)) {\n    // Formatter shortcut\n    field = {\n      key: key,\n      formatter: value\n    };\n  } else if (isObject(value)) {\n    field = clone(value);\n    field.key = field.key || key;\n  } else if (value !== false) {\n    // Fallback to just key\n\n    /* istanbul ignore next */\n    field = {\n      key: key\n    };\n  }\n\n  return field;\n}; // We normalize fields into an array of objects\n// [ { key:..., label:..., ...}, {...}, ..., {..}]\n\n\nexport var normalizeFields = function normalizeFields(origFields, items) {\n  var fields = [];\n\n  if (isArray(origFields)) {\n    // Normalize array Form\n    origFields.filter(identity).forEach(function (f) {\n      if (isString(f)) {\n        fields.push({\n          key: f,\n          label: startCase(f)\n        });\n      } else if (isObject(f) && f.key && isString(f.key)) {\n        // Full object definition. We use assign so that we don't mutate the original\n        fields.push(clone(f));\n      } else if (isObject(f) && keys(f).length === 1) {\n        // Shortcut object (i.e. { 'foo_bar': 'This is Foo Bar' }\n        var key = keys(f)[0];\n        var field = processField(key, f[key]);\n\n        if (field) {\n          fields.push(field);\n        }\n      }\n    });\n  } // If no field provided, take a sample from first record (if exits)\n\n\n  if (fields.length === 0 && isArray(items) && items.length > 0) {\n    var sample = items[0];\n    keys(sample).forEach(function (k) {\n      if (!IGNORED_FIELD_KEYS[k]) {\n        fields.push({\n          key: k,\n          label: startCase(k)\n        });\n      }\n    });\n  } // Ensure we have a unique array of fields and that they have String labels\n\n\n  var memo = {};\n  return fields.filter(function (f) {\n    if (!memo[f.key]) {\n      memo[f.key] = true;\n      f.label = isString(f.label) ? f.label : startCase(f.key);\n      return true;\n    }\n\n    return false;\n  });\n};"]}]}